<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CQ事</title>
  
  <subtitle>还年轻就现在</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-01-18T07:56:59.966Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>CQZL</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://example.com/2022/01/18/%E3%80%8A%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E3%80%8B%E4%B9%8B%E9%93%BE%E8%A1%A8/"/>
    <id>http://example.com/2022/01/18/%E3%80%8A%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E3%80%8B%E4%B9%8B%E9%93%BE%E8%A1%A8/</id>
    <published>2022-01-18T07:56:59.966Z</published>
    <updated>2022-01-18T07:56:59.966Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>C语言拾遗</title>
    <link href="http://example.com/2022/01/18/%E6%8D%A1%E8%B5%B7C%E8%AF%AD%E8%A8%80/"/>
    <id>http://example.com/2022/01/18/%E6%8D%A1%E8%B5%B7C%E8%AF%AD%E8%A8%80/</id>
    <published>2022-01-18T07:04:08.336Z</published>
    <updated>2022-01-18T07:19:46.056Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C语言拾遗"><a href="#C语言拾遗" class="headerlink" title="C语言拾遗"></a>C语言拾遗</h1><h2 id="H1函数"><a href="#H1函数" class="headerlink" title="H1函数"></a>H1函数</h2><h3 id="H1-1-函数声明"><a href="#H1-1-函数声明" class="headerlink" title="H1.1    函数声明"></a>H1.1    函数声明</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>;<span class="comment">// 声明函数 </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    print();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;hello world!&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;重学\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 函数体在main()函数后面的时候，由于函数的流程性需要在main函数前面声明[ void print(); ]</span></span><br><span class="line"><span class="comment">* 若在前面则不需要声明</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="H1-2-scanf函数运行原理"><a href="#H1-2-scanf函数运行原理" class="headerlink" title="H1.2  scanf函数运行原理"></a>H1.2  scanf函数运行原理</h3><ul><li>系统会将用户输入的内容先放入输入缓冲区（Cache） </li><li>scanf方式会从输入缓冲区中逐个取出内容赋值给变量</li><li>如果输入缓冲区的内容不为空,scanf会一直从缓冲区中获取,而不要求再次输入</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num1;</span><br><span class="line">    <span class="keyword">int</span> num2;</span><br><span class="line">    <span class="keyword">char</span> ch1;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%c%d&quot;</span>, &amp;num1, &amp;ch1, &amp;num2);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;num1 = %d, ch1 = %c, num2 = %d\n&quot;</span>, num1, ch1, num2);</span><br><span class="line">    <span class="keyword">char</span> ch2;</span><br><span class="line">    <span class="keyword">int</span> num3;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c%d&quot;</span>,&amp;ch2, &amp;num3);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;ch2 = %c, num3 = %d\n&quot;</span>, ch2, num3);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/01/17/XUvuicRGlS9IDgB.png" alt="image-20220110102048385"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num1;</span><br><span class="line">    <span class="keyword">int</span> num2;</span><br><span class="line">    <span class="keyword">char</span> ch1;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%c%d&quot;</span>, &amp;num1, &amp;ch1, &amp;num2);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;num1 = %d, ch1 = %c, num2 = %d\n&quot;</span>, num1, ch1, num2);</span><br><span class="line">    <span class="comment">//fflush(stdin); // 清空输入缓存区</span></span><br><span class="line">    setbuf(<span class="built_in">stdin</span>, <span class="literal">NULL</span>); <span class="comment">// 清空输入缓存区 </span></span><br><span class="line">    <span class="keyword">char</span> ch2;</span><br><span class="line">    <span class="keyword">int</span> num3;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c%d&quot;</span>,&amp;ch2, &amp;num3);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;ch2 = %c, num3 = %d\n&quot;</span>, ch2, num3);&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/01/17/4ogaTuShNvjw2Fk.png" alt="image-20220110102715684"></p><h3 id="H1-3-三目运算符"><a href="#H1-3-三目运算符" class="headerlink" title="H1.3        三目运算符"></a>H1.3        三目运算符</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> max = (a &gt; b) ? a : b;</span><br></pre></td></tr></table></figure><h3 id="H1-4-do-while-和-while-do"><a href="#H1-4-do-while-和-while-do" class="headerlink" title="H1.4        do-while 和 while-do"></a>H1.4        do-while 和 while-do</h3><p><strong>do - while</strong> ：由于程序的从上至下开始执行，无论While中的条件能否执行第一次，都会执行。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">    F++;</span><br><span class="line">&#125;<span class="keyword">while</span>(<span class="number">1</span>&lt;<span class="number">0</span>);</span><br><span class="line"><span class="comment">//执行F++</span></span><br></pre></td></tr></table></figure><h2 id="H2数组"><a href="#H2数组" class="headerlink" title="H2数组"></a>H2数组</h2><h3 id="H2-0-数组基本点"><a href="#H2-0-数组基本点" class="headerlink" title="H2.0        数组基本点"></a>H2.0        数组基本点</h3><blockquote><p>**<code>数组</code>**的表现是方式是    <strong>{ }</strong>    而不是    <strong><code>[ ]</code></strong></p></blockquote><blockquote><p>在定义数组的时候[]里面只能写整型常量或者是返回整型常量的表达式</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> ages4[<span class="string">&#x27;A&#x27;</span>] = &#123;<span class="number">19</span>, <span class="number">22</span>, <span class="number">33</span>&#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ages4[0] = %d\n&quot;</span>, ages4[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> ages5[<span class="number">5</span> + <span class="number">5</span>] = &#123;<span class="number">19</span>, <span class="number">22</span>, <span class="number">33</span>&#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ages5[0] = %d\n&quot;</span>, ages5[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> ages5[<span class="string">&#x27;A&#x27;</span> + <span class="number">5</span>] = &#123;<span class="number">19</span>, <span class="number">22</span>, <span class="number">33</span>&#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ages5[0] = %d\n&quot;</span>, ages5[<span class="number">0</span>]);</span><br></pre></td></tr></table></figure></blockquote><h3 id="H2-1-得到数组长度"><a href="#H2-1-得到数组长度" class="headerlink" title="H2.1        得到数组长度"></a>H2.1        得到数组长度</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//计算 数组的长度方法</span></span><br><span class="line"><span class="built_in">strlen</span>(nums1); </span><br><span class="line"><span class="keyword">sizeof</span>(‘数组名’)/<span class="keyword">sizeof</span>(<span class="keyword">int</span>);</span><br><span class="line">第三种过于繁琐复杂</span><br></pre></td></tr></table></figure><h3 id="H2-2-二维数组"><a href="#H2-2-二维数组" class="headerlink" title="H2.2        二维数组"></a>H2.2        二维数组</h3><blockquote><p>所谓二维数组就是一个一维数组的每个元素又被声明为一 维数组,从而构成二维数组. 可以说二维数组是特殊的一维数组。</p></blockquote><p><strong>值传递</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">// 和一位数组一样, 只看形参是基本类型还是数组类型</span></span><br><span class="line"><span class="comment">// 如果是基本类型在函数中修改形参不会影响实参</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">char</span> ch)</span></span>&#123;</span><br><span class="line">    ch = <span class="string">&#x27;n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> cs[<span class="number">2</span>][<span class="number">3</span>] = &#123;</span><br><span class="line">        &#123;<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>&#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;cs[0][0] = %c\n&quot;</span>, cs[<span class="number">0</span>][<span class="number">0</span>]); <span class="comment">// a</span></span><br><span class="line">    change(cs[<span class="number">0</span>][<span class="number">0</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;cs[0][0] = %c\n&quot;</span>, cs[<span class="number">0</span>][<span class="number">0</span>]); <span class="comment">// a</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>地址传递</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">// 和一位数组一样, 只看形参是基本类型还是数组类型</span></span><br><span class="line"><span class="comment">// 如果是数组类型在函数中修改形参会影响实参</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">char</span> ch[])</span></span>&#123;</span><br><span class="line">    ch[<span class="number">0</span>] = <span class="string">&#x27;n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> cs[<span class="number">2</span>][<span class="number">3</span>] = &#123;</span><br><span class="line">        &#123;<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;f&#x27;</span>&#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;cs[0][0] = %c\n&quot;</span>, cs[<span class="number">0</span>][<span class="number">0</span>]); <span class="comment">// a</span></span><br><span class="line">    change(cs[<span class="number">0</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;cs[0][0] = %c\n&quot;</span>, cs[<span class="number">0</span>][<span class="number">0</span>]); <span class="comment">// n</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br></pre></td></tr></table></figure><h2 id="H3字符串"><a href="#H3字符串" class="headerlink" title="H3字符串"></a>H3字符串</h2><blockquote><ul><li>字符串是位于双引号中的字符序列</li><li>在内存中以“\0”结束,所占字节比实际多一个</li></ul></blockquote><h3 id="H3-0-字符串的初始化"><a href="#H3-0-字符串的初始化" class="headerlink" title="H3.0        字符串的初始化"></a>H3.0        字符串的初始化</h3><p>在C语言中没有专门的字符串的变量，通常用一个字符数组来存放一个字符串。</p><h3 id="H3-1-字符串输入and出"><a href="#H3-1-字符串输入and出" class="headerlink" title="H3.1        字符串输入and出"></a>H3.1        字符串输入and出</h3><p>果字符数组中存储的是一个字符串, 那么字符数组的输入输出将变得简单方便。<br>不必使用循环语句逐个地输入输出每个字符。<br>可以使用printf函数和scanf函数一次性输出输入一个字符数组中的字符串。<br>使用的格式字符串为“%s”,表示输入、输出的是一个字符串 字符串的输出。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> ch[<span class="number">30</span>];</span><br><span class="line">gets(ch); <span class="comment">// 输入:lnj</span></span><br><span class="line"><span class="built_in">puts</span>(ch); <span class="comment">// 输出:lnj</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> ch[<span class="number">10</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,ch);</span><br></pre></td></tr></table></figure><h3 id="H3-2-字符串相关函数"><a href="#H3-2-字符串相关函数" class="headerlink" title="H3.2        字符串相关函数"></a>H3.2        字符串相关函数</h3><p><strong>字符串大小</strong></p><blockquote><ul><li>利用sizeof字符串长度</li><li>因为字符串在内存中是逐个字符存储的,一个字符占用一个字节,所以字符串的结束符长度也是占用的内存单元的字节数。</li></ul></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> name[] = <span class="string">&quot;it666&quot;</span>;</span><br><span class="line">  <span class="keyword">int</span> size = <span class="keyword">sizeof</span>(name);<span class="comment">// 包含\0</span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;size = %d\n&quot;</span>, size); <span class="comment">//输出结果:6</span></span><br></pre></td></tr></table></figure><p><strong>字符串长度</strong></p><blockquote><ul><li>格式: strlen(字符数组名)</li><li>功能:测字符串的实际长度(不含字符串结束标志‘\0’)并作为函数返回值。</li></ul></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> name[] = <span class="string">&quot;it666&quot;</span>;</span><br><span class="line">   <span class="keyword">size_t</span> len = <span class="built_in">strlen</span>(name2);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;len = %lu\n&quot;</span>, len); <span class="comment">//输出结果:5</span></span><br></pre></td></tr></table></figure><p><strong>字符串连接</strong></p><blockquote><p><strong>strlen</strong>(字符数组名)。功能:测字符串的实际长度(不含字符串结束标志‘\0’)并作为函数返回值。</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> oldStr[<span class="number">100</span>] = <span class="string">&quot;welcome to&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> newStr[<span class="number">20</span>] = <span class="string">&quot; lnj&quot;</span>;</span><br><span class="line"><span class="built_in">strcat</span>(oldStr, newStr);</span><br><span class="line"><span class="built_in">puts</span>(oldStr); <span class="comment">//输出: welcome to lnj&quot;</span></span><br></pre></td></tr></table></figure><p><strong>字符串拷贝</strong></p><blockquote><p><code>格式: strcpy(字符数组名1,字符数组名2)</code><br>功能:把字符数组2中的字符串拷贝到字符数组1中。串结束标志“\0”也一同拷贝。字符数名2, 也可以是一个字符串常量。这时相当于把一个字符串赋予一个字符数组。</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> oldStr[<span class="number">100</span>] = <span class="string">&quot;welcome to&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> newStr[<span class="number">50</span>] = <span class="string">&quot; lnj&quot;</span>;</span><br><span class="line"><span class="built_in">strcpy</span>(oldStr, newStr);</span><br><span class="line"><span class="built_in">puts</span>(oldStr); <span class="comment">// 输出结果:  lnj // 原有数据会被覆盖</span></span><br></pre></td></tr></table></figure><p><strong>字符串比较</strong></p><blockquote><ul><li>格式: strcmp(字符数组名1,字符数组名2)</li><li>功能:按照ASCII码顺序比较两个数组中的字符串,并由函数返回值返回比较结果。<ul><li>字符串1=字符串2,返回值=0;</li><li>字符串1&gt;字符串2,返回值&gt;0;</li><li>字符串1&lt;字符串2,返回值&lt;0。</li></ul></li></ul></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> oldStr[<span class="number">100</span>] = <span class="string">&quot;0&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> newStr[<span class="number">50</span>] = <span class="string">&quot;1&quot;</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, <span class="built_in">strcmp</span>(oldStr, newStr)); <span class="comment">//输出结果:-1</span></span><br><span class="line"><span class="keyword">char</span> oldStr[<span class="number">100</span>] = <span class="string">&quot;1&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> newStr[<span class="number">50</span>] = <span class="string">&quot;1&quot;</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, <span class="built_in">strcmp</span>(oldStr, newStr));  <span class="comment">//输出结果:0</span></span><br><span class="line"><span class="keyword">char</span> oldStr[<span class="number">100</span>] = <span class="string">&quot;1&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> newStr[<span class="number">50</span>] = <span class="string">&quot;0&quot;</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, <span class="built_in">strcmp</span>(oldStr, newStr)); <span class="comment">//输出结果:1</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>练习</strong><br>编写一个函数char_contains(char str[],char key)， 如果字符串str中包含字符key则返回数值1，否则返回数值0</p></blockquote><h2 id="H4指针"><a href="#H4指针" class="headerlink" title="H4指针"></a>H4指针</h2><h3 id="H4-0-指针的定义"><a href="#H4-0-指针的定义" class="headerlink" title="H4.0        指针的定义"></a>H4.0        指针的定义</h3><p><strong><em>a</em>* 的</strong>改变<strong>可以使得 其</strong>原参数<strong>发生</strong>变化<strong>【对其</strong>地址中存储的数据<strong>进行</strong>改变**】</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">3</span>,*p;</span><br><span class="line">p = &amp;a;</span><br><span class="line">*p = <span class="number">5</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// a = 5</span></span><br></pre></td></tr></table></figure><h3 id="H4-1-函数中指针的传参"><a href="#H4-1-函数中指针的传参" class="headerlink" title="H4.1 函数中指针的传参"></a>H4.1 函数中指针的传参</h3><h3 id="H4-2-指针数组"><a href="#H4-2-指针数组" class="headerlink" title="H4.2 指针数组"></a>H4.2 指针数组</h3><h3 id="H4-3数组指针"><a href="#H4-3数组指针" class="headerlink" title="H4.3数组指针"></a>H4.3数组指针</h3><h3 id="H4-4-指针数组和数组指针的区别"><a href="#H4-4-指针数组和数组指针的区别" class="headerlink" title="H4.4 指针数组和数组指针的区别"></a>H4.4 指针数组和数组指针的区别</h3><h3 id="H4-5-函数指针"><a href="#H4-5-函数指针" class="headerlink" title="H4.5 函数指针"></a>H4.5 函数指针</h3><h3 id="H4-6-结构体指针"><a href="#H4-6-结构体指针" class="headerlink" title="H4.6 结构体指针"></a>H4.6 结构体指针</h3><h2 id="H5结构体"><a href="#H5结构体" class="headerlink" title="H5结构体"></a>H5结构体</h2><h3 id="H5-0-结构体"><a href="#H5-0-结构体" class="headerlink" title="H5.0 结构体"></a>H5.0 结构体</h3><p><strong>结构声明</strong>（也见有称做定义一个结构体）是描述结构如何组合的主要方法。<br>一般形式是：<a href="https://so.csdn.net/so/search?q=struct&spm=1001.2101.3001.7020">struct</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> 结构名&#123;</span></span><br><span class="line">成员列表;</span><br><span class="line">成员列表; <span class="comment">// 字符串用 char 变量名[len] </span></span><br><span class="line">成员列表; <span class="comment">// 可能是结构体【1】</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>【1】： 可能是结构体<br>结构体不可以嵌套跟自己<strong>类型</strong>相同的结构体，但可以嵌套定义自己的指针。</p><p>struct关键词表示接下来是一个结构。</p><img src="https://s2.loli.net/2022/01/17/xTV17mQ2GwE98RL.png" style="float:center; width:500px;height:100 px"><p>struct <strong>Student</strong> stu； <u>‘结构体类型为Student’</u></p><h3 id="H5-1结构体的赋值"><a href="#H5-1结构体的赋值" class="headerlink" title="H5.1结构体的赋值"></a>H5.1结构体的赋值</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">today</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> time;</span><br><span class="line"><span class="keyword">int</span> days;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">today</span> <span class="title">td</span>;</span></span><br><span class="line">td = &#123;<span class="number">12</span>,<span class="number">1</span>&#125;; <span class="comment">//结构体中没有数组，可以不用强制转换</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span>&#123;</span></span><br><span class="line"><span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> stdid;</span><br><span class="line"><span class="keyword">int</span> age;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">stu</span>;</span></span><br><span class="line">stu = (struct student)&#123;<span class="string">&quot;c&quot;</span>,<span class="number">12</span>,<span class="number">23</span>&#125;; <span class="comment">//强制转换，将数据转换为struct</span></span><br></pre></td></tr></table></figure><p><strong>程序无法区分输入的数据是归入数组，还是归入结构体下一个变量</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,td.days);</span><br><span class="line"><span class="comment">// 结构体的打印 </span></span><br></pre></td></tr></table></figure><p><strong>字符串的传递值</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt; </span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">book</span>&#123;</span></span><br><span class="line"><span class="keyword">char</span> a[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">char</span> b[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> c;&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">book</span> <span class="title">bk</span>;</span></span><br><span class="line"><span class="built_in">strcpy</span>(bk.a,<span class="string">&quot;不要忘记开头预处理命令&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,bk.a);&#125;</span><br><span class="line"><span class="comment">// 输出</span></span><br><span class="line"><span class="comment">// 不要忘记开头预处理命令</span></span><br></pre></td></tr></table></figure><h3 id="H5-2-结构体的数组"><a href="#H5-2-结构体的数组" class="headerlink" title="H5.2 结构体的数组"></a>H5.2 结构体的数组</h3><p><strong>结构数组定义</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> 结构名 &#123;</span></span><br><span class="line">成员列表;</span><br><span class="line">成员列表;</span><br><span class="line">成员列表;</span><br><span class="line">&#125; 数组名[数组长度];</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span>&#123;</span>        <span class="comment">//声明结构体 Student</span></span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line">    <span class="keyword">float</span> score;</span><br><span class="line">&#125;stu[<span class="number">2</span>];              <span class="comment">//定义一个结构结构数组stu，共有5个元素</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">stu</span>[2] =</span> &#123;&#123;<span class="string">&quot;lnj&quot;</span>, <span class="number">35</span>,<span class="number">98.7</span>&#125;,&#123;<span class="string">&quot;zs&quot;</span>, <span class="number">18</span>,<span class="number">99.9</span>&#125;&#125;; </span><br></pre></td></tr></table></figure><h3 id="H5-3-结构体的嵌套"><a href="#H5-3-结构体的嵌套" class="headerlink" title="H5.3 结构体的嵌套"></a>H5.3 结构体的嵌套</h3><p>结构体中的成员可以又是一个结构体，构成结构体的嵌套：<br><strong>嵌套不同类型结构体</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Birthday</span>&#123;</span>                <span class="comment">//声明结构体 Birthday</span></span><br><span class="line">    <span class="keyword">int</span> year;</span><br><span class="line">    <span class="keyword">int</span> month;</span><br><span class="line">    <span class="keyword">int</span> day;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span>&#123;</span>                 <span class="comment">//声明结构体 Student</span></span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">20</span>];              </span><br><span class="line">    <span class="keyword">int</span> num;                    </span><br><span class="line">    <span class="keyword">float</span> score;                 </span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Birthday</span> <span class="title">birthday</span>;</span>   <span class="comment">//生日 </span></span><br><span class="line">&#125;; </span><br></pre></td></tr></table></figure><p>结构体<strong>不可以嵌套跟自己类型相同的结构体</strong>，但可以嵌套定义自己的指针。如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span>&#123;</span>                 <span class="comment">//声明结构体 Student</span></span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line">    <span class="keyword">float</span> score;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Student</span> *<span class="title">friend</span>;</span>     <span class="comment">//嵌套定义自己的指针</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>甚至可以多层嵌套：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Time</span>&#123;</span>                    <span class="comment">//声明结构体 Time</span></span><br><span class="line">    <span class="keyword">int</span> hh;                     <span class="comment">//时</span></span><br><span class="line">    <span class="keyword">int</span> mm;                     <span class="comment">//分</span></span><br><span class="line">    <span class="keyword">int</span> ss;                     <span class="comment">//秒</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Birthday</span>&#123;</span>                <span class="comment">//声明结构体 Birthday</span></span><br><span class="line">    <span class="keyword">int</span> year;</span><br><span class="line">    <span class="keyword">int</span> month;</span><br><span class="line">    <span class="keyword">int</span> day;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Time</span> <span class="title">dateTime</span>        //嵌套结构</span></span><br><span class="line"><span class="class">&#125;;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span>&#123;</span>                 <span class="comment">//声明结构体 Student</span></span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line">    <span class="keyword">float</span> score;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Birthday</span> <span class="title">birthday</span>;</span>   <span class="comment">//嵌套结构</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定义并初始化</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">stud</span> =</span> &#123;<span class="string">&quot;Jack&quot;</span>, <span class="number">32</span>, <span class="number">85</span>, &#123;<span class="number">1990</span>, <span class="number">12</span>, <span class="number">3</span>, &#123;<span class="number">12</span>, <span class="number">43</span>, <span class="number">23</span>&#125;&#125;&#125;;</span><br><span class="line"><span class="comment">//访问嵌套结构的成员并输出</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s 的出生时刻：%d时 \n&quot;</span>, stud.name, stud.birthday.dateTime.hh);</span><br><span class="line"><span class="comment">//输出结果：Jack 的出生时刻：12时 </span></span><br></pre></td></tr></table></figure><p><strong>注意如何初始化和对嵌套结构的成员进行访问。</strong></p><h3 id="H5-4结构体指针"><a href="#H5-4结构体指针" class="headerlink" title="H5.4结构体指针"></a>H5.4结构体指针</h3><p>当一个指针变量用来指向了一个结构变量，这个指针就成了结构指针变量。<br>结构指针变量中的值是所指向的结构变量的首地址。可以通过指针来访问结构变量。</p><p>1）定义结构指针变量的一般形式：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// struct 结构名 * 结构指针变量名</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> *<span class="title">pstu</span>;</span>       <span class="comment">//定义了一个指针变量，它只能指向Student结构体类型的结构体变量</span></span><br></pre></td></tr></table></figure><p>结构指针变量的定义也可以与结构体的定义同时。而且它必须先赋值后使用。</p><p>数组名表示的是数组的首地址，可以直接赋值给数组指针。</p><p>但结构变量名只是表示整个结构体变量，不表示结构体变量的首地址，所以不能直接赋值给结构指针变量，而应该使用 &amp; 运算符把结构变量的的地址赋值给结构指针变量。<br>即：<br><img src="https://s2.loli.net/2022/01/17/EjHmsy9LxpUncuN.png" alt="img"></p><p>注意：结构名、结构变量名、结构体指针的区别。</p><p>2）通过结构指针间接访问成员值</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//（*结构指针变量）. 成员名 and 结构指针变量 -&gt; 成员名</span></span><br><span class="line">(*pstu).name <span class="comment">//  形参.结构体内变量</span></span><br><span class="line">pstu-&gt; name  <span class="comment">// 指针指向结构体中的变量</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">注意(pstu)的小括号不能省略，因为成员符“.”优先级为<span class="number">1</span>，取地址符“”优先级为<span class="number">2</span>，去掉括号就相当于*(pstu.name)了</span><br></pre></td></tr></table></figure><h3 id="H5-5-结构体内存分析-古怪"><a href="#H5-5-结构体内存分析-古怪" class="headerlink" title="H5.5 结构体内存分析(古怪)"></a>H5.5 结构体内存分析(古怪)</h3><ul><li>给结构体变量开辟存储空间和给普通开辟存储空间一样, 会从内存地址大的位置开始开辟</li><li>给结构体成员开辟存储空间和给数组元素开辟存储空间一样, 会从所占用内存地址小的位置开始开辟</li><li>结构体变量占用的内存空间永远是所有成员中占用内存最大成员的倍数(对齐问题)</li></ul><p><strong>结构体变量占用存储空间大小</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 例1</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Person</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> age; <span class="comment">// 4 字节</span></span><br><span class="line">    <span class="keyword">char</span> ch; <span class="comment">// 1 字节</span></span><br><span class="line">    <span class="keyword">double</span> score; <span class="comment">// 8 字节</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Person</span> <span class="title">p</span>;</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;sizeof = %i\n&quot;</span>, <span class="keyword">sizeof</span>(p));  <span class="comment">// 16 字节</span></span><br></pre></td></tr></table></figure><p><strong>计算过程:</strong></p><ul><li><p>占用内存最大属性是score, 占8个字节, 所以第一次会分配8个字节</p></li><li><p>将第一次分配的8个字节分配给age4个,分配给ch1个, 还剩下3个字节</p></li><li><p>当需要分配给score时, 发现只剩下3个字节, 所以会再次开辟8个字节存储空间</p></li><li><p>一共开辟了两次8个字节空间, 所以最终p占用16个字节</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//例2</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Person</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> age; <span class="comment">// 4</span></span><br><span class="line">    <span class="keyword">double</span> score; <span class="comment">// 8</span></span><br><span class="line">    <span class="keyword">char</span> ch; <span class="comment">// 1</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Person</span> <span class="title">p</span>;</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;sizeof = %i\n&quot;</span>, <span class="keyword">sizeof</span>(p)); <span class="comment">// 24</span></span><br></pre></td></tr></table></figure></li></ul><p><strong>计算过程:</strong></p><ul><li>占用内存最大属性是<strong>score</strong>, 占<strong>8个字节</strong>, 所以第一次会分配8个字节</li><li>将第一次分配的8个字节分配给age4个,还剩下4个字节</li><li>当需要分配给score时, 发现只剩下4个字节, 所以会再次开辟8个字节存储空间</li><li>将新分配的8个字节分配给score, 还剩下0个字节</li><li>当需要分配给ch时, 发现上一次分配的已经没有了, 所以会再次开辟8个字节存储空间</li><li>一共开辟了3次8个字节空间, 所以最终p占用24个字节</li></ul><h2 id="H6-关键字"><a href="#H6-关键字" class="headerlink" title="H6 关键字"></a>H6 关键字</h2><h3 id="H6-1-define"><a href="#H6-1-define" class="headerlink" title="H6.1  #define"></a>H6.1  #define</h3><p>宏定义</p><h3 id="H6-2-typedef"><a href="#H6-2-typedef" class="headerlink" title="H6.2  typedef"></a>H6.2  typedef</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;C语言拾遗&quot;&gt;&lt;a href=&quot;#C语言拾遗&quot; class=&quot;headerlink&quot; title=&quot;C语言拾遗&quot;&gt;&lt;/a&gt;C语言拾遗&lt;/h1&gt;&lt;h2 id=&quot;H1函数&quot;&gt;&lt;a href=&quot;#H1函数&quot; class=&quot;headerlink&quot; title=&quot;H1函数&quot;</summary>
      
    
    
    
    <category term="C语言" scheme="http://example.com/categories/C%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="C语言" scheme="http://example.com/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>实习总结第二天</title>
    <link href="http://example.com/2022/01/07/%E5%AE%9E%E4%B9%A0%E6%80%BB%E7%BB%93-2/"/>
    <id>http://example.com/2022/01/07/%E5%AE%9E%E4%B9%A0%E6%80%BB%E7%BB%93-2/</id>
    <published>2022-01-07T02:18:32.642Z</published>
    <updated>2022-01-08T18:57:41.172Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实习总结第二天"><a href="#实习总结第二天" class="headerlink" title="实习总结第二天"></a>实习总结第二天</h2><h2 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h2><pre><code> 软件测试的流程可分为：需求分析，测试计划，测试用例设计，测试用例执行，BUG提交分析，测试报告的编写。</code></pre><p>按照<strong>测试的先后顺序</strong>可以分为<strong>单元测试</strong>，<strong>集成测试</strong>，<strong>确认测试</strong>，<strong>系统测试</strong>与<strong>验收测试</strong>。<br><strong>单元测试</strong>和<strong>集成测试</strong>由设计人员和程序员完成，<strong>系统测试</strong>由<strong>软件测试小组</strong>根据上面的三个基本步骤完成，<strong>验收测试</strong>由用户完成。</p><h2 id="对JS-JSP-XML-SQL-SSM-太过于陌生"><a href="#对JS-JSP-XML-SQL-SSM-太过于陌生" class="headerlink" title="对JS JSP XML SQL SSM  太过于陌生"></a>对JS JSP XML SQL SSM  太过于陌生</h2><h1 id="找到学习的路学习"><a href="#找到学习的路学习" class="headerlink" title="找到学习的路学习"></a>找到学习的路学习</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;实习总结第二天&quot;&gt;&lt;a href=&quot;#实习总结第二天&quot; class=&quot;headerlink&quot; title=&quot;实习总结第二天&quot;&gt;&lt;/a&gt;实习总结第二天&lt;/h2&gt;&lt;h2 id=&quot;单元测试&quot;&gt;&lt;a href=&quot;#单元测试&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    
    <category term="经验" scheme="http://example.com/tags/%E7%BB%8F%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>实习总结第一天</title>
    <link href="http://example.com/2022/01/07/%E5%AE%9E%E4%B9%A0%E6%80%BB%E7%BB%93-1/"/>
    <id>http://example.com/2022/01/07/%E5%AE%9E%E4%B9%A0%E6%80%BB%E7%BB%93-1/</id>
    <published>2022-01-07T02:18:32.639Z</published>
    <updated>2022-01-08T18:57:34.298Z</updated>
    
    <content type="html"><![CDATA[<p>实习总结第一天</p><h2 id="导入公司的项目"><a href="#导入公司的项目" class="headerlink" title="导入公司的项目"></a>导入公司的项目</h2><h3 id="H1-了解-SVN"><a href="#H1-了解-SVN" class="headerlink" title="H1     了解 SVN"></a>H1     了解 <strong>SVN</strong></h3><blockquote><p>（Subversion(SVN) 是一个开源的版本控制系統, 也就是说 Subversion 管理着随时间改变的数据。 这些数据放置在一个中央资料档案库(repository) 中。 这个档案库很像一个普通的文件服务器, 不过它会记住每一次文件的变动。 这样你就可以把档案恢复到旧的版本, 或是浏览文件的变动历史。）</p></blockquote><h3 id="H2-安装Tomcat"><a href="#H2-安装Tomcat" class="headerlink" title="H2     安装Tomcat"></a>H2     安装Tomcat</h3><blockquote><p>(Tomcat 8 实现了对 Servlet 3.1 和 JavaServer Page 2.3（JSP）的支持，并提供了作为 Web 服务器的一些特有功能，如 Tomcat 管理和控制平台、安全域管理和 Tomcat 附加组件等。)</p></blockquote><p>​        从官网上下载 <em>Tomcat8.5</em>  按照步骤安装操作</p><h3 id="H3-配置Eclipse环境"><a href="#H3-配置Eclipse环境" class="headerlink" title="H3     配置Eclipse环境"></a>H3     配置Eclipse环境</h3><h4 id="H3-1-下载代码"><a href="#H3-1-下载代码" class="headerlink" title="H3.1 下载代码"></a>H3.1 下载代码</h4><div>         <img src="https://s2.loli.net/2022/01/05/D1jqne9hJVMioKC.png" width="45%">     <img src="https://s2.loli.net/2022/01/05/smLThXNFyY4ZDOg.png" width="50%"> </div><p>​    下载 <strong>SVN</strong>  插件，通过 <strong>SVN</strong>  于在eclipse中import导入代码<br>​    检出项目 - &gt; 选择仓库 - &gt;  登录账号  - &gt; 下载代码（不知流程顺序）</p><h4 id="H3-2-配置Tomcat"><a href="#H3-2-配置Tomcat" class="headerlink" title="H3.2 配置Tomcat"></a>H3.2 配置Tomcat</h4><h4 id><a href="#" class="headerlink" title></a><img src="https://s2.loli.net/2022/01/05/Lb2DdytiAETG83X.png" alt="image-20220105094511506"></h4><p><img src="https://s2.loli.net/2022/01/05/m7qtGbD1px2Zw5z.png" alt="image-20220105100250189"></p><h4 id="H3-3-代码应用配置"><a href="#H3-3-代码应用配置" class="headerlink" title="H3.3  代码应用配置"></a>H3.3  代码应用配置</h4><p>右点点击然后 <em><code>Run AS</code></em> - &gt; <code>选择Tomcat8.5</code> - &gt;  <code>运行</code> </p><h4 id="H3-4-其他设置"><a href="#H3-4-其他设置" class="headerlink" title="H3.4 其他设置"></a>H3.4 其他设置</h4><p>设置通过Tomcat展示的网页，浏览器显示(没用内置的浏览器）</p><p>将问题框调动出来，查看问题出现情况</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;实习总结第一天&lt;/p&gt;
&lt;h2 id=&quot;导入公司的项目&quot;&gt;&lt;a href=&quot;#导入公司的项目&quot; class=&quot;headerlink&quot; title=&quot;导入公司的项目&quot;&gt;&lt;/a&gt;导入公司的项目&lt;/h2&gt;&lt;h3 id=&quot;H1-了解-SVN&quot;&gt;&lt;a href=&quot;#H1-了解-SVN</summary>
      
    
    
    
    
    <category term="经验" scheme="http://example.com/tags/%E7%BB%8F%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title>KNN算法</title>
    <link href="http://example.com/2021/10/29/KNN%E7%AE%97%E6%B3%95/"/>
    <id>http://example.com/2021/10/29/KNN%E7%AE%97%E6%B3%95/</id>
    <published>2021-10-29T09:13:28.208Z</published>
    <updated>2022-01-08T18:59:01.628Z</updated>
    
    <content type="html"><![CDATA[<h1 id="KNN算法"><a href="#KNN算法" class="headerlink" title="KNN算法"></a>KNN算法</h1><blockquote><p>KNN 最简单的分类算法之一</p></blockquote><h2 id="H2-Class-1"><a href="#H2-Class-1" class="headerlink" title="H2 Class-1"></a>H2 Class-1</h2><blockquote><p>来源于《<strong>Python数据分析与挖掘实战</strong>》实例</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">#-*-coding: utf-8 -*_#开发团队</span><br><span class="line"># E-Mail: cq30@foxmail.com</span><br><span class="line"># 开发时间 : 2021&#x2F;10&#x2F;21 17:40</span><br><span class="line"># @auther: CQ-PRO</span><br><span class="line"> </span><br><span class="line">import numpy as np</span><br><span class="line">import operator</span><br><span class="line"></span><br><span class="line">def DataSet():</span><br><span class="line">    group &#x3D; np.array([[3,104],[2,100],[1,81],[101,10],[99,5],[98,2]])</span><br><span class="line">    labels&#x3D; [&#39;爱情片&#39;,&#39;爱情片&#39;,&#39;爱情片&#39;,&#39;动作片&#39;,&#39;动作片&#39;,&#39;动作片&#39;]</span><br><span class="line">    return group,labels</span><br><span class="line">    </span><br><span class="line">def KNN(input_x,group,Getlabels,k):</span><br><span class="line">    group_row &#x3D; group.shape[0]</span><br><span class="line">    # shape[0] 存在的意义就是变成行数</span><br><span class="line">    Newgroup &#x3D; np.tile(input_x,(group_row,1))</span><br><span class="line">    #通过输入的一个数据 -&gt; 演变成和实例group一样(rows相同 columns相同)的group的数组</span><br><span class="line">    re_row &#x3D; (Newgroup-group)**2</span><br><span class="line">    #相对数据位置相减取平方</span><br><span class="line">    ad_row &#x3D; re_row.sum(axis&#x3D;1)</span><br><span class="line">    #【1】</span><br><span class="line">    #相同的行，相加</span><br><span class="line">    distance &#x3D; ad_row ** 0.5</span><br><span class="line">    #计算欧氏距离 distance</span><br><span class="line">    index_dis &#x3D; distance.argsort()</span><br><span class="line">    #【2】</span><br><span class="line">    classdict &#x3D; &#123;&#125;</span><br><span class="line">    # classDict &#x3D; &#123;key : value -&gt; label : sum &#125;</span><br><span class="line">    for i in range(k):</span><br><span class="line">        label &#x3D; Getlabels[index_dis[i]]</span><br><span class="line">        classdict[label] &#x3D; classdict.get(label,0)+1</span><br><span class="line">        #dict.get(key, default&#x3D;None)</span><br><span class="line">        #get(label,0) 的意思是查询 label 是否在现字典中有值的存在，若无返回一个默认值 0</span><br><span class="line">        #再加 1</span><br><span class="line">    print(classdict)</span><br><span class="line">    sort_classdict &#x3D; sorted(classdict.items(),key&#x3D;operator.itemgetter(1),reverse&#x3D;True)</span><br><span class="line">    #【3】</span><br><span class="line">    return sort_classdict[0][0]</span><br><span class="line"></span><br><span class="line">group,labels &#x3D; DataSet()</span><br><span class="line">test_x &#x3D; [0,22]</span><br><span class="line">print(&#39;输入的数据对应的类型:&#123;&#125;&#39;.format(KNN(test_x,group,labels,3)))</span><br></pre></td></tr></table></figure><blockquote><h3 id="【1】-numpy库中axis的理解"><a href="#【1】-numpy库中axis的理解" class="headerlink" title="【1】  numpy库中axis的理解"></a>【1】  numpy库中axis的理解</h3><p><img src="https://i.loli.net/2021/10/29/Tl1UAXM2NzbwZ7s.png" alt="image.png"></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">a &#x3D; np.arange(0,4).reshape(2,2)</span><br><span class="line">print(a)</span><br><span class="line">#   array([[0, 1],</span><br><span class="line">#          [2, 3]])</span><br><span class="line">a.sum(axis &#x3D; 0)</span><br><span class="line">print(a)</span><br><span class="line">#   array([2, 4])</span><br><span class="line">a.sum(axis&#x3D;1)</span><br><span class="line">#   array([1,5])</span><br></pre></td></tr></table></figure><blockquote><h3 id="【2】-np-argsort-的用法"><a href="#【2】-np-argsort-的用法" class="headerlink" title="【2】 np.argsort()的用法"></a>【2】 np.argsort()的用法</h3></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#一维数组</span><br><span class="line">import numpy as np</span><br><span class="line">x &#x3D; np.array([1,4,3,-1,6,9])</span><br><span class="line">x.argsort()</span><br><span class="line"># array([3, 0, 1, 2, 4, 5], dtype&#x3D;int64)</span><br></pre></td></tr></table></figure><p>上述得返回数组中的最大值在数组中的index<strong>索引</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#二维数组</span><br><span class="line">x &#x3D; np.array([[1,5,4],[-1,6,9]])</span><br><span class="line"># [ [ 1  5  4]</span><br><span class="line">#   [-1  6  9] ]</span><br><span class="line">#沿着行向下(每列)的元素进行排序  </span><br><span class="line">np.argsort(x,axis&#x3D;0)</span><br><span class="line"># array([[1, 0, 0],</span><br><span class="line">#        [0, 1, 1]], dtype&#x3D;int64)</span><br><span class="line">#沿着列向右(每行)得元素进行排序</span><br><span class="line">np.argsort(x,axis&#x3D;1)</span><br><span class="line"># array([[0, 2, 1],</span><br><span class="line">#        [0, 1, 2]], dtype&#x3D;int64)</span><br></pre></td></tr></table></figure><p>在二维数组中得到返回值仍是数组索引，但是去要区别相对于行和列</p><blockquote><h3 id="【3】-语句理解"><a href="#【3】-语句理解" class="headerlink" title="【3】 语句理解"></a>【3】 语句理解</h3></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sort_classdict &#x3D; sorted(classdict.items(),key&#x3D;operator.itemgetter(1),reverse&#x3D;True)</span><br></pre></td></tr></table></figure><p>sorted( )语句:</p><blockquote><p>sorted(iterable, cmp=None, key=None, reverse=False)</p></blockquote><ul><li>iterable – 可迭代对象。</li><li>cmp – 比较的函数，这个具有两个参数，参数的值都是从可迭代对象中取出，此函数必须遵守的规则为，大于则返回1，小于则返回-1，等于则返回0。</li><li>key – 主要是用来进行比较的元素，只有一个参数，具体的函数的参数就是取自于可迭代对象中，指定可迭代对象中的一个元素来进行排序。</li><li>reverse – 排序规则，reverse = True 降序 ， reverse = False 升序（默认）。 </li></ul><p>sorted( )和sort()区别:</p><ul><li>sort 是应用在 list 上的方法，sorted 可以对所有可迭代的对象进行排序操作。</li><li>list 的 sort 方法返回的是对已经存在的列表进行操作，无返回值，而内建函数 sorted 方法返回的是一个新的 list，而不是在原来的基础上进行的操作。</li></ul><p>小编:  @CQZL<br>2021年10月29日 </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;KNN算法&quot;&gt;&lt;a href=&quot;#KNN算法&quot; class=&quot;headerlink&quot; title=&quot;KNN算法&quot;&gt;&lt;/a&gt;KNN算法&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;KNN 最简单的分类算法之一&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;H2-C</summary>
      
    
    
    
    <category term="大数据" scheme="http://example.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="Work" scheme="http://example.com/tags/Work/"/>
    
  </entry>
  
  <entry>
    <title>第一个教师节</title>
    <link href="http://example.com/2021/09/10/%E6%95%99%E5%B8%88%E8%8A%82%E5%BF%AB%E4%B9%90/"/>
    <id>http://example.com/2021/09/10/%E6%95%99%E5%B8%88%E8%8A%82%E5%BF%AB%E4%B9%90/</id>
    <published>2021-09-09T18:40:58.000Z</published>
    <updated>2022-01-08T19:00:36.662Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="0bd5d76b3a1ab7f3490f154ba813a0739dcb951f5bf131cf42ccc91afcff952c">c01dd2e56d37148ea7b3b1bb4eb238219bd9dfe35b2f18f063818345300f97295b943928db57c0b9444d020f56c74f0541a0436211a257909f59f1ad710190a047fe2d3141e4d6f9efc1ac257c6c42cba14a289cea04bb79f3f8f00194bba05d9f25dd9906f3f547f23bd79743d74e23b18836711fb737fbfb2ed23a2459b754b9034cd4758ee9e1af9cde41fb8c9d4462c923be110403e5670ebd89e1d0ac193aba846e0f86522d05b367cfa9d12e98b89b01d3fa5f9667d75cdc01a5595a0daf1d62444224f696ebcca4545039659431d22115fdb2397e3197fe1fb75140b63e101f236cb03b8b2d4f49572b8e46f55c2e33a989ab2673417bf7301a1ed3689fbf0bc48bd0154e7a8d2aabb5390238215fb4c00dcb40b08ce6412465b5c3a7d6353193a2d957e4dbdc0b528bbbdd7685beb6a1339f2629f0deed9738a216a3bc4ad6091a4ba98c6b02047a3d80a9dba41e6d023e1684e96e8f2d74e2dc2fe2a47ab1d11427c3445bee94f372925ab3a47ed527864846b67bdff0718166a48ed6fefab1fa511c5e90ec3579045c15f18b4370db7cd0d4d50d899826d850be8643e697dcb0a33e5a7996029608255d9720356b7af6bb818af2b2ecd6e3545ebdef85b067564b9e2503375fbb3a77bd3e9d5ee6938e7ab4a3c5bd5b2aa14e1a8965e674a2a1f760b53f5978125ad6b44391669bb2eb72532469b2b01afe7894c2f6ffe34a9305b781a80a8354b7fe4c5686ed8969204935e765fb00d5505f5fc11ef674531529cf53ede09336dad933e9341934bfce12c3d752e8483ea99656e510e1f7630a23ddb43e064bc496f9fbd63de28bcd4f846dbfb8717cdedcab9346638e6df4ed343d7aeab18866530499198c06c56d33b0f658fe55d73363f76a00f54b81584238f66a12f889d25b565a4b632f861fa0da8e50f29e9f4e64e9fee4</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">这里有东西被加密了，需要输入密码查看哦。</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>2021年4月</title>
    <link href="http://example.com/2021/08/31/2021%E5%B9%B44%E6%9C%88%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/2021/08/31/2021%E5%B9%B44%E6%9C%88%E6%80%BB%E7%BB%93/</id>
    <published>2021-08-31T13:59:26.407Z</published>
    <updated>2021-08-31T13:59:26.407Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="ba877e45bd2ea80bc6cb1e7248420af70fe055852363d4d93dc62a26c087d301"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">这里有东西被加密了，需要输入密码查看哦。</summary>
    
    
    
    <category term="2021年总结" scheme="http://example.com/categories/2021%E5%B9%B4%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="总结" scheme="http://example.com/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>实现万年历和时钟</title>
    <link href="http://example.com/2021/05/23/%E5%AE%9E%E7%8E%B0%E4%B8%87%E5%B9%B4%E5%8E%86%E5%92%8C%E6%97%B6%E9%92%9F/"/>
    <id>http://example.com/2021/05/23/%E5%AE%9E%E7%8E%B0%E4%B8%87%E5%B9%B4%E5%8E%86%E5%92%8C%E6%97%B6%E9%92%9F/</id>
    <published>2021-05-23T06:03:58.000Z</published>
    <updated>2022-01-08T19:00:55.916Z</updated>
    
    <content type="html"><![CDATA[<h1 id="用-JavaGUI-实现万年历和时钟"><a href="#用-JavaGUI-实现万年历和时钟" class="headerlink" title="用 JavaGUI 实现万年历和时钟"></a>用 JavaGUI 实现万年历和时钟</h1><blockquote><p>大二上学期 Java课程设计 用GUI完成万年历和设计<br><strong>无高能</strong>，划水作品</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Title-万年历和时钟"><a href="#Title-万年历和时钟" class="headerlink" title="Title: 万年历和时钟"></a>Title: 万年历和时钟</h2><p><img src="https://i.loli.net/2021/05/23/Bzg5VwZua9t1GJN.png" alt="F0U_AQ1559_A_JDR7SJW1Y6.png"></p><h2 id="H1-需求分析"><a href="#H1-需求分析" class="headerlink" title="H1 需求分析"></a>H1 需求分析</h2><ul><li><input checked disabled type="checkbox"> 使用图形用户界面</li><li><input checked disabled type="checkbox"> 画面简洁、 易于观看</li><li><input checked disabled type="checkbox"> 能够实现日期与星期的查询</li><li><input checked disabled type="checkbox"> 能够显示多年日历</li><li><input checked disabled type="checkbox"> 能够直观的看到时间 </li><li><input checked disabled type="checkbox"> 设计的系统界面简洁、 布局合理</li></ul><h2 id="H2-设计模样"><a href="#H2-设计模样" class="headerlink" title="H2 设计模样"></a>H2 设计模样</h2><blockquote><p><img src="https://i.loli.net/2021/05/23/2vgmYrns1bhoKUt.png" alt="2_WTL5_BLLV4AB__S.png"><img src="https://i.loli.net/2021/05/23/2vgmYrns1bhoKUt.png" alt="2_WTL5_BLLV4AB__S.png"><br><img src="https://i.loli.net/2021/05/23/HJ8XtwhnPAi9yGq.png" alt="_6T1X2D8IM__CD0RGC_K2D8.png"><img src="https://i.loli.net/2021/05/23/EaShBPDRNAZm4fF.png" alt="_7DQ_IGPTSJ0BQFS_OPHC@G.png"></p></blockquote><p><img src="https://i.loli.net/2021/05/23/M3fT8AnqbEegBa2.gif" alt="v2-a445869a1ee93c3110a17c196e301c5f_b.gif"></p><h2 id="H2-显示时间"><a href="#H2-显示时间" class="headerlink" title="H2 显示时间"></a>H2 显示时间</h2><p><strong>DreaClock.java</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">@author:CQZL</span><br><span class="line">package calender;</span><br><span class="line">import java.awt.Color;</span><br><span class="line">import java.awt.Graphics;</span><br><span class="line">import java.util.Date;</span><br><span class="line">import javax.swing.JPanel;</span><br><span class="line">import javax.swing.JTextField;</span><br><span class="line">import javax.swing.border.TitledBorder;</span><br><span class="line">public class DrawClock extends JPanel implements Runnable &#123;</span><br><span class="line"> Thread newThread;</span><br><span class="line"> private JTextField timezone;</span><br><span class="line"> public void start()&#123;</span><br><span class="line">  newThread&#x3D;new Thread(this);</span><br><span class="line">  newThread.start();</span><br><span class="line"> &#125;</span><br><span class="line"> public void stop()&#123;</span><br><span class="line">  newThread&#x3D;null;</span><br><span class="line"> &#125;</span><br><span class="line"> public void paint(Graphics g)&#123;</span><br><span class="line">  super.paint(g);</span><br><span class="line">  setBorder(new TitledBorder(&quot;NowTime&quot;));</span><br><span class="line">  setBackground(Color.WHITE);</span><br><span class="line">  Date nowDate &#x3D;new Date();</span><br><span class="line">  g.drawString(nowDate.toLocaleString(), 75, 120);</span><br><span class="line">&#x2F;&#x2F;显示时间：  设置显示位置</span><br><span class="line"> &#125;</span><br><span class="line"> &#x2F;&#x2F;得到系统时间</span><br><span class="line"> public Date getDate()&#123;</span><br><span class="line">  Date nowDate &#x3D;new Date();</span><br><span class="line">  return nowDate;</span><br><span class="line"> &#125;</span><br><span class="line"> &#x2F;&#x2F;刷新图层</span><br><span class="line"> public void run() &#123;</span><br><span class="line">  while(newThread!&#x3D;null)&#123;</span><br><span class="line">   Date timeNow &#x3D;new Date();</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="H3-时钟背景"><a href="#H3-时钟背景" class="headerlink" title="H3 时钟背景"></a>H3 时钟背景</h2><p><strong>Clock.java</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">package calender;</span><br><span class="line">import java.awt.BorderLayout;</span><br><span class="line">import java.awt.Color;</span><br><span class="line">import javax.swing.JPanel;</span><br><span class="line">import javax.swing.SwingUtilities;</span><br><span class="line">import javax.swing.UIManager;</span><br><span class="line">import javax.swing.border.TitledBorder;</span><br><span class="line">public class Clock extends JPanel &#123;</span><br><span class="line"> private  UIManager.LookAndFeelInfo  looks[];</span><br><span class="line"> private DrawClock clock;</span><br><span class="line"> public Clock()&#123;</span><br><span class="line">  looks&#x3D;UIManager.getInstalledLookAndFeels();</span><br><span class="line">  changeTheLookAndFeel(2);</span><br><span class="line">  clock&#x3D;new DrawClock();</span><br><span class="line">  clock.start();</span><br><span class="line">  this.setLayout(new BorderLayout());</span><br><span class="line">  &#x2F;&#x2F;设置布置容器的边框布局</span><br><span class="line">  this.setOpaque(false);</span><br><span class="line">  &#x2F;&#x2F;设置边框为透明的</span><br><span class="line">  this.add(clock);</span><br><span class="line">  this.setBorder(new TitledBorder(&quot;日期时间 &quot;));</span><br><span class="line">  setSize(300,300);</span><br><span class="line">  setVisible(true);</span><br><span class="line"> &#125;</span><br><span class="line"> private void changeTheLookAndFeel(int i) &#123;</span><br><span class="line">  try&#123;</span><br><span class="line">   UIManager.setLookAndFeel(looks[i].getClassName());</span><br><span class="line">   SwingUtilities.updateComponentTreeUI(this);</span><br><span class="line">  &#125;catch(Exception e)&#123;</span><br><span class="line">   e.printStackTrace();</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;设置整体时历的布局</span><br></pre></td></tr></table></figure><h2 id="H4-日期分区"><a href="#H4-日期分区" class="headerlink" title="H4 日期分区"></a>H4 日期分区</h2><p><strong>Calender.java</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><span class="line">package calender;</span><br><span class="line">import java.awt.BorderLayout;</span><br><span class="line">import java.awt.Color;</span><br><span class="line">import java.awt.GridLayout;</span><br><span class="line">import java.awt.event.ActionEvent;</span><br><span class="line">import java.awt.event.ActionListener;</span><br><span class="line">import java.util.Date;</span><br><span class="line">import java.util.GregorianCalendar;</span><br><span class="line">import javax.swing.JComboBox;</span><br><span class="line">import javax.swing.JLabel;</span><br><span class="line">import javax.swing.JPanel;</span><br><span class="line">import javax.swing.border.TitledBorder;</span><br><span class="line">&#x2F;*</span><br><span class="line">1.将所需要的对象和变量设置</span><br><span class="line">2.设置布局 7*7的JLable[]数组</span><br><span class="line">3.设置日历中的日期</span><br><span class="line">*&#x2F;</span><br><span class="line">public class Calender extends JPanel implements ActionListener &#123;</span><br><span class="line"> public static final String HOUR_OF_DAY&#x3D;null;</span><br><span class="line"> JComboBox yearCom&#x3D;new JComboBox();</span><br><span class="line"> JComboBox monthCom &#x3D; new JComboBox();</span><br><span class="line"> &#x2F;&#x2F;创建下拉列表对象（对年和月进行下拉处理）</span><br><span class="line"> JLabel year_i&#x3D;new JLabel(&quot;年&quot;);</span><br><span class="line"> JLabel month_i&#x3D;new JLabel(&quot;月&quot;);</span><br><span class="line"> &#x2F;&#x2F;创建JLable对象，拆功能键下拉栏旁边的标签</span><br><span class="line"> Date nowDate &#x3D;new Date();</span><br><span class="line"> &#x2F;&#x2F;时间种类</span><br><span class="line"> JLabel[]  jlabelDay&#x3D; new JLabel[49];</span><br><span class="line"> &#x2F;&#x2F;JLabel创建数组，为设值界面做基础</span><br><span class="line"> int now_year&#x3D;nowDate.getYear()+1900;</span><br><span class="line"> &#x2F;&#x2F;getYear() 返回的值不是 4 位的数字！对于介于 1900 后的年份，getYear() 方法仅返回年份是NowYear-1900</span><br><span class="line"> int now_month&#x3D;nowDate.getMonth();</span><br><span class="line"> &#x2F;&#x2F;设置现在年变量和月变量</span><br><span class="line"> String String_year&#x3D;null;</span><br><span class="line"> int month_int&#x3D;0;</span><br><span class="line"> JPanel paneYM&#x3D;new JPanel();</span><br><span class="line"> JPanel paneDay &#x3D;new JPanel();</span><br><span class="line"> &#x2F;&#x2F;建立容器对象</span><br><span class="line"> &#x2F;&#x2F;构造函数主要实现</span><br><span class="line"> &#x2F;&#x2F;1.将年份，月份加入下拉栏中</span><br><span class="line"> &#x2F;&#x2F;2.&#x2F;在容器里添加各种变量</span><br><span class="line"> &#x2F;&#x2F;3.在容器里添加各种变量</span><br><span class="line"> &#x2F;&#x2F;4.设置日历模块容器的网格布局</span><br><span class="line"> &#x2F;&#x2F;5.布日历局</span><br><span class="line"> &#x2F;&#x2F;6.设置容器在窗口的布局</span><br><span class="line"> public Calender()&#123;</span><br><span class="line">  super();</span><br><span class="line">  for(int year&#x3D;now_year-30;year&lt;&#x3D;now_year+30;year++)&#123;</span><br><span class="line">   yearCom.addItem(year+&quot;&quot;);</span><br><span class="line">   &#x2F;&#x2F;在开头建立的年份下拉列表，建立数字项</span><br><span class="line">   &#x2F;&#x2F;additem 方法在组合框或列表框中添加一个新数据项，并且可以指定数据项索引。</span><br><span class="line">  &#125;</span><br><span class="line">  for(int i&#x3D;1;i&lt;13;i++)&#123;</span><br><span class="line">   monthCom.addItem(i+&quot;&quot;);</span><br><span class="line"> &#x2F;&#x2F;在开头建立的月份下拉列表，建立数字项</span><br><span class="line"> &#x2F;&#x2F;additem 方法在组合框或列表框中添加一个新数据项，并且可以指定数据项索引。</span><br><span class="line">  &#125;</span><br><span class="line">&#x2F;&#x2F;在容器里添加各种变量</span><br><span class="line">  yearCom.setSelectedIndex(30);</span><br><span class="line">  paneYM.add(yearCom);&#x2F;&#x2F;添加年下拉栏</span><br><span class="line">  paneYM.add(year_i);&#x2F;&#x2F;添加年标签</span><br><span class="line">  monthCom.setSelectedIndex(now_month);</span><br><span class="line">  paneYM.add(monthCom);&#x2F;&#x2F;添加月下拉栏</span><br><span class="line">  paneYM.add(month_i);&#x2F;&#x2F;添加月栏标签</span><br><span class="line">  &#x2F;&#x2F;下拉栏添加监听！</span><br><span class="line">  monthCom.addActionListener( this);</span><br><span class="line">  yearCom.addActionListener(this);</span><br><span class="line">  &#x2F;&#x2F;设置paneDay网格布局，(行数,列数,行间距,列间距));</span><br><span class="line">  paneDay.setLayout(new GridLayout(7,7,10,10));</span><br><span class="line">  &#x2F;&#x2F;布日历局</span><br><span class="line">  for(int i&#x3D;0;i&lt;49;i++)&#123;</span><br><span class="line">   jlabelDay[i] &#x3D;new JLabel(&quot;  &quot;);</span><br><span class="line"> &#x2F;&#x2F;初始化</span><br><span class="line">   paneDay.add(jlabelDay[i]);</span><br><span class="line">  &#125;</span><br><span class="line">  this.setDay();</span><br><span class="line">  &#x2F;&#x2F;设置容器在窗口的布局</span><br><span class="line">  this.setLayout(new BorderLayout());</span><br><span class="line">  this.add(paneDay,BorderLayout.CENTER);</span><br><span class="line">&#x2F;&#x2F;设置边界布局，设置在中心</span><br><span class="line">  this.add(paneYM,BorderLayout.NORTH);</span><br><span class="line">  this.setSize(100,200);</span><br><span class="line">  &#x2F;&#x2F;设置边界布局，北边</span><br><span class="line">  this.setBorder(new TitledBorder(&quot;日历&quot;));</span><br><span class="line">  setSize(300,300);</span><br><span class="line"> &#125;</span><br><span class="line"> &#x2F;&#x2F;控制这个日历的几天几天 7*7的矩阵</span><br><span class="line"> &#x2F;&#x2F;设置日历中的日期</span><br><span class="line">  void setDay() &#123; String_year&#x3D;yearCom.getSelectedItem().toString();</span><br><span class="line"> &#x2F;&#x2F;将此时的string类型在下拉列表去表达</span><br><span class="line">   month_int&#x3D;monthCom.getSelectedIndex();</span><br><span class="line">  </span><br><span class="line">  int year_sel&#x3D;Integer.parseInt(String_year)-1900;</span><br><span class="line">  </span><br><span class="line">  &#x2F;&#x2F;                    获得检索下拉列表里面的月份  日期为1号</span><br><span class="line">  Date date&#x3D; new Date(year_sel,month_int,1);</span><br><span class="line">  GregorianCalendar cal&#x3D;new GregorianCalendar();</span><br><span class="line">  &#x2F;&#x2F;获得年份值，月份值，</span><br><span class="line">  cal.setTime(date);</span><br><span class="line">  String[] week&#x3D;&#123;&quot;星期日&quot;,&quot;星期一&quot;,&quot;星期二&quot;,&quot;星期三&quot;,&quot;星期四&quot;,&quot;星期五&quot;,&quot;星期六&quot;&#125;;</span><br><span class="line">  int day&#x3D;0;</span><br><span class="line">  int day_week&#x3D;0;</span><br><span class="line">  </span><br><span class="line">  for(int i&#x3D;0;i&lt;7;i++)&#123;</span><br><span class="line">   jlabelDay[i].setText(week[i]);</span><br><span class="line"> &#125;&#x2F;&#x2F;显示日历开始一行标签</span><br><span class="line">  </span><br><span class="line">  if(month_int&#x3D;&#x3D;0||month_int&#x3D;&#x3D;2||month_int&#x3D;&#x3D;4||month_int&#x3D;&#x3D;6||month_int&#x3D;&#x3D;9||month_int&#x3D;&#x3D;11)&#123;</span><br><span class="line">  &#x2F;&#x2F;月份是从&quot;0&quot;开始的</span><br><span class="line">  &#x2F;&#x2F;1 3 5 7 8 10 12 为大月</span><br><span class="line">   day&#x3D;31;</span><br><span class="line">  &#125;</span><br><span class="line">  else if(month_int&#x3D;&#x3D;3||month_int&#x3D;&#x3D;5||month_int&#x3D;&#x3D;7||month_int&#x3D;&#x3D;8||month_int&#x3D;&#x3D;10)&#123;</span><br><span class="line">  &#x2F;&#x2F;2 4 6 </span><br><span class="line">     day&#x3D;30;</span><br><span class="line">  &#125;else&#123;</span><br><span class="line">  if(cal.isLeapYear(year_sel))&#123;</span><br><span class="line">  &#x2F;&#x2F; 调用GregorianCalendar类下 cal.isLeapYear 判断是否是闰年</span><br><span class="line">  day&#x3D;29;</span><br><span class="line">  &#125;else&#123;</span><br><span class="line">  day&#x3D;28;</span><br><span class="line">  &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  &#x2F;&#x2F;设置大概布局，根据大概的年月来规划天数 </span><br><span class="line">  &#x2F;&#x2F;得到现在这个月份的天数   用day来表示</span><br><span class="line">  </span><br><span class="line">  &#x2F;&#x2F;去得到  day的数据进入下一个循环</span><br><span class="line">  day_week&#x3D;7+date.getDay();  </span><br><span class="line">  &#x2F;*</span><br><span class="line">  date.getDay(); 获取现在时间，如果是周日获取值为“0”，周一为“1”，~~周六为“6”</span><br><span class="line">  +7使用为 周1~周7里面有7个JFable[]</span><br><span class="line">    *&#x2F;</span><br><span class="line">  int count&#x3D;1;</span><br><span class="line">  for(int i&#x3D;day_week;i&lt;day_week+day;count++,i++)&#123;</span><br><span class="line">   if(i %7&#x3D;&#x3D;0||i&#x3D;&#x3D;13||i&#x3D;&#x3D;20||i&#x3D;&#x3D;27||i&#x3D;&#x3D;48||i&#x3D;&#x3D;34||i&#x3D;&#x3D;41)&#123;</span><br><span class="line"> &#x2F;&#x2F;i%7&#x3D;&#x3D;0 意思为现在是 周日变红色，其他周六变为red</span><br><span class="line">    if(i&#x3D;&#x3D;day_week+nowDate.getDate()-1)&#123;</span><br><span class="line">    </span><br><span class="line">&#x2F;&#x2F;getDate()函数  返回本地时间1~31  但是-1相等于数组里面的i</span><br><span class="line">     jlabelDay[i].setForeground(Color.BLUE);</span><br><span class="line">     jlabelDay[i].setText(count+&quot;*&quot;);       </span><br><span class="line">     &#x2F;&#x2F;找出当前日期，并显示出蓝色</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">     jlabelDay[i].setForeground(Color.RED);</span><br><span class="line">     jlabelDay[i].setText(count+&quot;&quot;);        </span><br><span class="line">     &#x2F;&#x2F;进入IF 不符合为</span><br><span class="line">     &#125; &#125;</span><br><span class="line">   else</span><br><span class="line">   &#123;</span><br><span class="line">    if(i&#x3D;&#x3D;day_week+nowDate.getDate()-1)&#123;</span><br><span class="line">     jlabelDay[i].setForeground(Color.BLUE);</span><br><span class="line">     jlabelDay[i].setText(count+&quot;*&quot;);          </span><br><span class="line">&#x2F;&#x2F;在当前日期上面添加 &#39; 使之加重显示</span><br><span class="line">    &#125;else</span><br><span class="line">    &#123;</span><br><span class="line">     jlabelDay[i].setForeground(Color.BLACK);</span><br><span class="line">     jlabelDay[i].setText(count+&quot;&quot;);</span><br><span class="line">&#x2F;&#x2F;else  在其他地方上加&quot; &quot;  意思是不加  里面为空</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   &#125;</span><br><span class="line">    for(int i&#x3D;7;i&lt;day_week;i++)&#123;</span><br><span class="line">    jlabelDay[i].setText(&quot; &quot;);         </span><br><span class="line">     &#x2F;&#x2F;在月份一号前面设为空“ ”</span><br><span class="line">    &#125;</span><br><span class="line">    for(int i&#x3D;day_week+day;i&lt;49;i++)&#123;</span><br><span class="line">    jlabelDay[i].setText(&quot; &quot;);</span><br><span class="line">    &#125;&#x2F;&#x2F;在月份日期最后一天加上“ ” 完成日历设置</span><br><span class="line">  &#125;&#x2F;&#x2F;这个设置日历中的日期结束</span><br><span class="line"> public void actionPerformed(ActionEvent e) &#123;</span><br><span class="line">&#x2F;&#x2F;设置侦听器</span><br><span class="line">  if(e.getSource()&#x3D;&#x3D;yearCom||e.getSource()&#x3D;&#x3D;monthCom)&#123;</span><br><span class="line">   this.setDay();</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="H5-最终测试"><a href="#H5-最终测试" class="headerlink" title="H5 最终测试"></a>H5 最终测试</h2><p><strong>Test.java</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">package calender;</span><br><span class="line">import java.awt.BorderLayout;</span><br><span class="line">import java.awt.Color;</span><br><span class="line">import java.awt.Font;</span><br><span class="line">import java.awt.event.ActionEvent;</span><br><span class="line">import java.awt.event.ActionListener;</span><br><span class="line">import java.text.SimpleDateFormat;</span><br><span class="line">import java.util.Date;</span><br><span class="line">import javax.swing.JFrame;</span><br><span class="line">import javax.swing.JLabel;</span><br><span class="line">import javax.swing.JPanel;</span><br><span class="line">import javax.swing.Timer;</span><br><span class="line">public class Test &#123;</span><br><span class="line"> public Test(JFrame j)&#123;</span><br><span class="line">  Clock clock&#x3D;new Clock();</span><br><span class="line">  Calender cal &#x3D;  new Calender();</span><br><span class="line">  j.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">  j.setBounds(500,200,650, 300);</span><br><span class="line">  j.setVisible(true);</span><br><span class="line">  j.setContentPane(clock);</span><br><span class="line">  j.getContentPane().add(cal,BorderLayout.WEST);</span><br><span class="line">  j.setResizable(false);</span><br><span class="line"> &#125;</span><br><span class="line"> public static void main(String[] args)&#123;</span><br><span class="line">JFrame j &#x3D; new JFrame();</span><br><span class="line">    Test test &#x3D;new Test(j);</span><br><span class="line">  j.setTitle(&quot;万年历和时钟&quot;);</span><br><span class="line"> &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;用-JavaGUI-实现万年历和时钟&quot;&gt;&lt;a href=&quot;#用-JavaGUI-实现万年历和时钟&quot; class=&quot;headerlink&quot; title=&quot;用 JavaGUI 实现万年历和时钟&quot;&gt;&lt;/a&gt;用 JavaGUI 实现万年历和时钟&lt;/h1&gt;&lt;blockquo</summary>
      
    
    
    
    
    <category term="Work" scheme="http://example.com/tags/Work/"/>
    
  </entry>
  
  <entry>
    <title>hope to fucking solve it</title>
    <link href="http://example.com/2021/05/16/Hope%20to%20fucking%20solve%20it/"/>
    <id>http://example.com/2021/05/16/Hope%20to%20fucking%20solve%20it/</id>
    <published>2021-05-16T07:16:49.000Z</published>
    <updated>2022-01-09T12:44:11.068Z</updated>
    
    <content type="html"><![CDATA[<h2 id="H2-在大三前，solve-it"><a href="#H2-在大三前，solve-it" class="headerlink" title="H2  在大三前，solve it."></a>H2  在大三前，solve it.</h2><blockquote><p>完蛋玩意没做成！<br>2022.1.9.20点42分</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;H2-在大三前，solve-it&quot;&gt;&lt;a href=&quot;#H2-在大三前，solve-it&quot; class=&quot;headerlink&quot; title=&quot;H2  在大三前，solve it.&quot;&gt;&lt;/a&gt;H2  在大三前，solve it.&lt;/h2&gt;&lt;blockquote&gt;
</summary>
      
    
    
    
    
    <category term="Hope" scheme="http://example.com/tags/Hope/"/>
    
  </entry>
  
  <entry>
    <title>分享我喜欢的诗词</title>
    <link href="http://example.com/2021/04/26/%E7%9B%B8%E4%BF%A1%E6%9C%AA%E6%9D%A5/"/>
    <id>http://example.com/2021/04/26/%E7%9B%B8%E4%BF%A1%E6%9C%AA%E6%9D%A5/</id>
    <published>2021-04-26T15:15:52.387Z</published>
    <updated>2022-01-08T18:58:26.394Z</updated>
    
    <content type="html"><![CDATA[<h2 id="相信未来"><a href="#相信未来" class="headerlink" title="相信未来"></a>相信未来</h2><h3 id="作者：食指"><a href="#作者：食指" class="headerlink" title="作者：食指"></a>作者：<a href="https://baike.baidu.com/item/%E9%A3%9F%E6%8C%87/6799189">食指</a></h3><h4 id="——选自《食指的诗歌》"><a href="#——选自《食指的诗歌》" class="headerlink" title="——选自《食指的诗歌》"></a>——选自<a href="https://baike.baidu.com/item/%E7%9B%B8%E4%BF%A1%E6%9C%AA%E6%9D%A5/56396">《食指的诗歌》</a></h4><hr><hr><blockquote><p>当蜘蛛网无情地查封了我的炉台，<br>当灰烬的余烟叹息着贫困的悲哀，<br>我依然固执地铺平失望的灰烬，<br>用美丽的雪花写下：相信未来。</p></blockquote><blockquote><p>当我的紫葡萄化为深秋的露水，<br>当我的鲜花依偎在别人的情怀，<br>我依然固执地用凝霜的枯藤，<br>在凄凉的大地上写下：相信未来。</p></blockquote><blockquote><p>我要用手指那涌向天边的排浪，<br>我要用手掌那托起太阳的大海，<br>摇曳着曙光那支温暖漂亮的笔杆，<br>用孩子的笔体写下：相信未来。</p></blockquote><blockquote><p>我之所以坚定地相信未来，<br>是我相信未来人们的眼睛——<br>她有拨开历史风尘的睫毛，<br>她有看透岁月篇章的瞳孔。</p></blockquote><blockquote><p>不管人们对于我们腐烂的皮肉，<br>那些迷途的惆怅，失败的苦痛，<br>是寄予感动的热泪，深切的同情，<br>还是给以轻蔑的微笑，辛辣的嘲讽。</p></blockquote><blockquote><p>我坚信人们对于我们的脊骨，<br>那无数次地探索、迷途、失败和成功，<br>一定会给予热情、客观、公正的评定，<br>是的，我焦急地等待着他们的评定。</p></blockquote><blockquote><p>朋友，坚定地相信未来吧，<br>相信不屈不挠的努力，<br>相信战胜死亡的年轻，<br>相信未来，热爱生命。</p></blockquote><hr><hr><p><img src="https://i.loli.net/2021/04/22/GQKt8WSnmq5HVoB.jpg" alt="Alt"><br>分享者 <a href="https://baike.baidu.com/item/%E5%A5%BD%E5%A5%87/5074691">@CQZL</a><br>2021 年 03月 01日    </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;相信未来&quot;&gt;&lt;a href=&quot;#相信未来&quot; class=&quot;headerlink&quot; title=&quot;相信未来&quot;&gt;&lt;/a&gt;相信未来&lt;/h2&gt;&lt;h3 id=&quot;作者：食指&quot;&gt;&lt;a href=&quot;#作者：食指&quot; class=&quot;headerlink&quot; title=&quot;作者：食指&quot;&gt;</summary>
      
    
    
    
    <category term="读物" scheme="http://example.com/categories/%E8%AF%BB%E7%89%A9/"/>
    
    
    <category term="Shore" scheme="http://example.com/tags/Shore/"/>
    
  </entry>
  
  <entry>
    <title>&lt;Hello World&gt;</title>
    <link href="http://example.com/2021/04/26/hello-world/"/>
    <id>http://example.com/2021/04/26/hello-world/</id>
    <published>2021-04-26T15:15:52.386Z</published>
    <updated>2022-01-08T18:58:44.734Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h2 id="H2-这是哪"><a href="#H2-这是哪" class="headerlink" title="H2 这是哪"></a>H2 这是哪</h2><p>这是我的博客，我将分享我最近项目、生活态度、往期的项目代码。</p><h2 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run"><a href="#Run" class="headerlink" title="Run"></a>Run</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo cl &amp;&amp; hexo g &amp;&amp; hexo s </span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a><br>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h2 id=&quot;H2-这是哪&quot;&gt;&lt;a href=&quot;#H2-这是哪&quot; cla</summary>
      
    
    
    
    
    <category term="Hello" scheme="http://example.com/tags/Hello/"/>
    
  </entry>
  
</feed>
